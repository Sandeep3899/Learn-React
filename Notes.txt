Package.json is a configuration of npm, 
why do we need this to manage dependencies npm will take care of the version of the package

Webpack, Parcel, and Vite are popular tools in JavaScript development used for bundling and optimizing code for web applications. 
While they all serve the purpose of transforming and packaging code

In our project we are using Parcel, is a library 
# npm install -D Parcel
why -D:
there are two types of dependencies
1.Dev dependencies(development phase)
2.Normal dependencies(in production)   

to check version - npm parcel --version

In a package.json file, the caret (^) and 
tilde (~) symbols are used to define version ranges for package dependencies

- For example, ^1.2.3 would allow updates to 1.2.4, 1.3.0, or 1.9.9, but not 2.0.0.
- For example, ~1.2.3 would allow updates to 1.2.4, 1.2.5, but not 1.3.0 or 2.0.0.

package-lock.json:
This file is automatically generated and updated by npm to lock down the exact versions of all installed dependencies,
including sub-dependencies

package.json:
This file acts as the project's manifest, containing metadata about the project itself (name, version, author, license)
and defining its direct dependencies.

.gitignore- it contains files that are not required to upload to github like the node_modules


- to ignite the App - npx parcel index.html
- npm to install
- npx to excute the package

- to bring react into the project cdn links isn't a good way
better way is to get react as a dependencies with npm
- to install - npm install or i(shortcut for install) react not -D cause we want install react as normal dependency
- to install react dom - npm i react-dom

Parcel:(parceljs.org)
- Dev Build
- Local Server
- HMR = Hot Module Replacement
- File Watching Algorithm - written in C++
- Caching - For faster builds
- Image optimizing
- Minification
- bundling
- Compressing
- Consistent Hashing: a distributed hashing scheme that minimizes data redistribution when nodes are added or removed from a system
- Code Splitting
- Differential Bundling - support older browsers 
- Diagnostics
- Error Handling
- HTTPs
- Tree Shaking Algorithm- remove unused code for you
- Different dev and prod bundles

npx parcel build intex.html for production